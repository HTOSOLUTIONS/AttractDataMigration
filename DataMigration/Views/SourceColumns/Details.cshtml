

@model SourceColumnViewModel

@{
    ViewData["Title"] = "Details";
    ViewData["Title"] = "Source Column Details";

    Model.RowCtrls.Controls.Add(new HTORowEdit());


}

<div class="hto-pgtitle">Details</div>

<crud-links record-controls="@Model.RowCtrls" last-action="@ActionHistory.GetLastHistoryItem(ViewContext.HttpContext)" class="crudctrls"></crud-links>


<div class="hto-rtitle">Source Column</div>

<div class="hto-details">
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TableSchema)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TableSchema)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TableName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TableName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ColumnName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ColumnName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ColumnTargets)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ColumnTargets,"ColumnTargets")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NeedsMigration)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NeedsMigration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SourceTable.DestinationTable)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SourceTable.DestinationTable)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NeedsFollowUp)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NeedsFollowUp)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
</div>

@if (!string.IsNullOrEmpty(Model.SourceTable.DestinationTable))
{
    @await Component.InvokeAsync(nameof(TaregetTablesBranchesVC), new { tablename = Model.SourceTable.DestinationTable})
    

}