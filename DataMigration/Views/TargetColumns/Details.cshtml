@using System.Text.Json

@model TargetColumnViewModel

@{
    ViewData["Title"] = "Details";
    ViewData["Title"] = "Target Column Details";

    Model.RowCtrls.Controls.Add(new HTORowEdit());

    var options = new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            };

}

@section Scripts {

    <script>

        $(document).ready(function () {

            $(".removetarget").on("click", function () { removeTarget(this); });

        });

        function removeTarget(ctrl) { 
            var targetRow = $(ctrl).closest("[data-columntarget]");
            var targetColumn = $(targetRow).data("columntarget");
            $(targetRow).addClass("remove");
            console.log(targetColumn);

            $.post("/kitchensink/unlinkcolumns", targetColumn, function () {
                $("[data-columntarget].remove").remove();
            });

        }

    </script>

}

<div class="hto-pgtitle">Details</div>

<crud-links record-controls="@Model.RowCtrls" last-action="@ActionHistory.GetLastHistoryItem(ViewContext.HttpContext)" class="crudctrls"></crud-links>


<div class="hto-rtitle">Target Column: @Html.DisplayFor(model => model.ColumnName) </div>


<div class="container-fluid">
    <div class="row">
        <div class="col-sm-6">
            <div class="hto-details">
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.TableSchema)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.TableSchema)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.TableName)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.TableName)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.ColumnSources)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.ColumnSources, "ColumnSources")
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Description)
                    </dd>
                </dl>
            </div>

        </div>
        <div class="col-sm-6">
            <div class="hto-details">
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.TargetTable.RowCount)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.TargetTable.RowCount)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.NonNulls)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.NonNulls)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.UseType)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.UseType)
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="hto-relatedtitle">Target Columns</div>

@if (Model.ColumnSources != null && Model.ColumnSources.Count > 0)
{
    <div class="hto-relatedlist">
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>@Html.DisplayNameFor(c => Model.ColumnSources.FirstOrDefault().TargetTable)</th>
                    <th>@Html.DisplayNameFor(c => Model.ColumnSources.FirstOrDefault().TargetColumn)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ColumnSources)
                {
                    <tr data-columntarget='@JsonSerializer.Serialize(item, options)'>
                        <td><span class='removetarget glyphicons glyphicons-remove-sign'></span></td>
                        <td>@Html.DisplayFor(m => item.TargetTable)</td>
                        <td>@Html.DisplayFor(m => item.TargetColumn)</td>
                    </tr>

                }
            </tbody>
        </table>

    </div>

} else
{
    <p>None</p>
}


