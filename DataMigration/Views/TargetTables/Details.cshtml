@model TargetTableWithColumnsViewModel

@{
    ViewData["Title"] = "Details";
    var baseColumn = Model?.Columns != null ? Model.Columns.FirstOrDefault() : new TargetColumnViewModel( new TargetDDContext.Models.Column());

    Model.RowCtrls.Controls.Add(new HTORowEdit());


}

@section Scripts {

    <script>

        $(document).ready(function () {

            configTableLinks();

        });


        function configTableLinks() {
            $("a.pathpart").on("click", function () {

                var tablewithschema = $(this).html();
                var nameparts = tablewithschema.split(".");
                var schemaname = nameparts[0];
                var tablename = nameparts[1];
                window.location.href = "/TargetTables/Details?tablename=" + tablename + "&tableschema=" + schemaname;
            });

        }



    </script>


}



<div class="hto-pgtitle">Details</div>

<crud-links record-controls="@Model.RowCtrls" last-action="@ActionHistory.GetLastHistoryItem(ViewContext.HttpContext)" class="crudctrls"></crud-links>

<div class="hto-rtitle">Target Table:  @Html.DisplayFor(model => model.TableName)</div>


<div class="container-fluid">

    <div class="row">
        <div class="col-sm-6">
            <div class="hto-details">
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.UseType)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.UseType)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.UseDomain)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.UseDomain)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.RowCount)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.RowCount)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Description)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.NeedsMigration)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.NeedsMigration)
                    </dd>
                </dl>
            </div>

            @Html.DisplayFor(m => Model.TSQLSelectDistinctColumns, "TSQLSelectDistinctColumns")

            @await Html.PartialAsync("ChildPathsView", Model.ChildPathsView)


            @Html.DisplayFor(m => Model.ParentPathsView, "ParentPathsView")

        </div>
        <div class="col-sm-6">

            @Html.DisplayFor(m => Model.Columns, "ColumnsGroupedByUseType")



        </div>
    </div>


</div>





