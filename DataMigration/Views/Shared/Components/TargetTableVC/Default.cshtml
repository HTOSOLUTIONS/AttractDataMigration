@using System.Text.Json
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    var options = new JsonSerializerOptions
    {
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
    };

}
@model TargetTableWithColumnsViewModel

<a asp-controller="TargetTables" asp-action="Details" asp-all-route-data="@Model.RouteValues">
    <h4 data-targettablename="@Model.TableName">@Html.DisplayFor(c => Model.TableName)</h4>
</a>


@Html.DisplayFor(m => Model.TSQLSelectDistinctColumns, "TSQLSelectDistinctColumns")


@await Html.PartialAsync("ChildPathsView", Model.ChildPathsView)


@Html.DisplayFor(m => Model.ParentPathsView, "ParentPathsView")





@if (Model?.Columns != null)
{
    <table class="table targetcolumns matchers">

        <thead>
            <tr>
                <th>@Html.DisplayNameFor(c => Model.Columns.FirstOrDefault().ColumnName)</th>
                <th>@Html.DisplayNameFor(c => Model.Columns.FirstOrDefault().DataType)</th>
                <th>@Html.DisplayNameFor(c => Model.Columns.FirstOrDefault().ColumnSources)</th>
                <th>@Html.DisplayNameFor(c => Model.Columns.FirstOrDefault().NonNulls)</th>
                <th>@Html.DisplayNameFor(c => Model.Columns.FirstOrDefault().DistinctValues)</th>
            </tr>
        </thead>


        @foreach (var column in Model.Columns)
        {
            var dClass = column.DistinctValues == null || column.DistinctValues < 2 ? " class=lowvalue" : "";

            <tr data-targetcolumn='@JsonSerializer.Serialize(column, options)' @dClass>
                <td>@Html.DisplayFor(c => column.ColumnName)</td>
                <td>@Html.DisplayFor(c => column.DataType)</td>
                <td class="columnsources" style="max-width: 50px; overflow: visible;">@Html.DisplayFor(c => column.ColumnSources, "ColumnSources")</td>
                <td>@Html.DisplayFor(c => column.NonNulls)</td>
                <td>@Html.DisplayFor(c => column.DistinctValues)</td>
            </tr>
           
        }


    </table>

    
}